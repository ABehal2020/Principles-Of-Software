package hw7;

public class CampusPaths {
	public static void main(String[] argv) {
		public static void listBuilding(CampusMapGraph g)
		{
			System.out.print(g.listAllBuildings());
		}
		public static void main(String[] argv)
		{
			CampusMapGraph rpi = new CampusMapGraph();
			try
			{
				rpi.createNewGraph("behala/data/RPI_map_data_Nodes.csv", "behala/data/RPI_map_data_Edges.csv");
			}
			catch (IOException i)
			{
				return;
			}
			String menu = "Menu:\n"
					+ "b: lists all buildings\n"
					+ "r: prints directions for the shortest route between two buildings or their IDs\n"
					+ "q: quits the program\n"
					+ "m: prints a menu of all commands\n";
			BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
			String input = "";
			while(!input.equals("q"))
			{
				try
				{
					input = reader.readLine();
				}
				catch (IOException e)
				{
					break;
				}
				if(input.equals("b"))
					listBuilding(rpi);
				else if(input.equals("r"))
				{
					String start;
					String end;
					System.out.print("First building id/name, followed by Enter: ");
					try
					{
						start = reader.readLine();
					}
					catch (IOException badinput)
					{
						break;
					}
					System.out.print("Second building id/name, followed by Enter: ");
					try
					{
						end = reader.readLine();
					}
					catch (IOException badinput)
					{
						break;
					}
					System.out.print(rpi.findPath(start, end));
				}
				else if(input.equals("q"))
					break;
				else if(input.equals("m"))
					System.out.print(menu);
				else
					System.out.print("Unknown option\n");
			}
			return;
		}
	}
}